name: Indeed Scraper

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # ---------------------------------------------------------
      # 1. Checkout your repository
      # ---------------------------------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # ---------------------------------------------------------
      # 2. Set up Python
      # ---------------------------------------------------------
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      # ---------------------------------------------------------
      # 3. Install all required system packages for Chrome
      # ---------------------------------------------------------
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libasound2t64 \
            libnss3 \
            libxss1 \
            libatk1.0-0 \
            libatk-bridge2.0-0 \
            libcups2 \
            libdrm2 \
            libxkbcommon0 \
            libxdamage1 \
            libxrandr2 \
            libgbm1 \
            libxcomposite1 \
            libxshmfence1 \
            libpango-1.0-0 \
            libcairo2 \
            xvfb wget unzip curl jq

      # ---------------------------------------------------------
      # 4. Install Chrome and matching ChromeDriver automatically
      # ---------------------------------------------------------
      - name: Install Google Chrome and matching ChromeDriver
        run: |
          echo "Installing latest stable Google Chrome..."
          wget -q https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt install -y ./google-chrome-stable_current_amd64.deb
          google-chrome --version

          echo "Matching ChromeDriver version..."
          CHROME_MAJOR=$(google-chrome --version | grep -oP '\d+' | head -1)
          echo "Detected Chrome major version: $CHROME_MAJOR"

          DRIVER_VERSION=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json" | \
            jq -r --arg ver "$CHROME_MAJOR" '.versions[] | select(.version | startswith($ver + ".")) | .version' | head -1)

          DRIVER_URL=$(curl -s "https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json" | \
            jq -r --arg ver "$DRIVER_VERSION" '.versions[] | select(.version==$ver) | .downloads.chromedriver[] | select(.platform=="linux64") | .url')

          wget -q "$DRIVER_URL" -O /tmp/chromedriver.zip
          unzip -q /tmp/chromedriver.zip -d /tmp/
          sudo mv /tmp/chromedriver-linux64/chromedriver /usr/local/bin/chromedriver
          sudo chmod +x /usr/local/bin/chromedriver
          chromedriver --version

      # ---------------------------------------------------------
      # 5. Install Python dependencies
      # ---------------------------------------------------------
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # ---------------------------------------------------------
      # 6. Run scraper in old headless mode (without editing Python)
      # ---------------------------------------------------------
      - name: Run Indeed Scraper
        run: |
          echo "Starting Indeed scraper with old headless mode..."
          export CHROME_ARGS="--headless=old --no-sandbox --disable-gpu --disable-dev-shm-usage"
          xvfb-run --auto-servernum bash -c 'python indeed_full_details_scraper.py'

      # ---------------------------------------------------------
      # 7. Upload scrape results (optional)
      # ---------------------------------------------------------
      - name: Upload results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: indeed-scrape-results
          path: |
            output.csv
            output.json
            logs/
